name: NS 固件自动镜像同步

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  Firmware:
    runs-on: ubuntu-latest
    steps:
      - name: 安装 rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}
          
      - name: 下载最新的 5 个固件
        run: |
             cd $HOME
             FIRMWARE_LIST="`curl -fsL "https://archive.org/download/nintendo-switch-global-firmwares/Official%20Global%20Firmware%20MD5%20Hashs.txt" | sed 's/\t/\n/g' | grep "Firmware"`"
             VERSION1=$(printf "$FIRMWARE_LIST" | head -2 | tail -1)
             VERSION2=$(printf "$FIRMWARE_LIST" | head -3 | tail -1)
             VERSION3=$(printf "$FIRMWARE_LIST" | head -4 | tail -1)
             VERSION4=$(printf "$FIRMWARE_LIST" | head -5 | tail -1)
             VERSION5=$(printf "$FIRMWARE_LIST" | head -6 | tail -1)
             echo "下载 ${VERSION1}"
             echo "VERSION1=${VERSION1}" >> $GITHUB_ENV
             aria2c -s8 -j8 -x8 "https://archive.org/download/nintendo-switch-global-firmwares/${VERSION1}.zip" -o "${VERSION1/ /_}.zip"
             echo "下载 ${VERSION2}"
             echo "VERSION2=${VERSION2}" >> $GITHUB_ENV
             aria2c -s8 -j8 -x8 "https://archive.org/download/nintendo-switch-global-firmwares/${VERSION2}.zip" -o "${VERSION2/ /_}.zip"
             echo "下载 ${VERSION3}"
             echo "VERSION3=${VERSION3}" >> $GITHUB_ENV
             aria2c -s8 -j8 -x8 "https://archive.org/download/nintendo-switch-global-firmwares/${VERSION2}.zip" -o "${VERSION3/ /_}.zip"
             echo "下载 ${VERSION4}"
             echo "VERSION4=${VERSION4}" >> $GITHUB_ENV
             aria2c -s8 -j8 -x8 "https://archive.org/download/nintendo-switch-global-firmwares/${VERSION2}.zip" -o "${VERSION4/ /_}.zip"
             echo "下载 ${VERSION5}"
             echo "VERSION5=${VERSION5}" >> $GITHUB_ENV
             aria2c -s8 -j8 -x8 "https://archive.org/download/nintendo-switch-global-firmwares/${VERSION2}.zip" -o "${VERSION5/ /_}.zip"
             
      - name: 清空上次同步的固件
        continue-on-error: true
        env:
          refreshtoken: ${{ secrets.REFRESH_TOKEN }}
        run: |
          echo "尝试清空固件文件夹"
          rclone delete 'e5:/NSEmuHelper/NSFirmware'
          rclone mkdir 'e5:/NSEmuHelper/NSFirmware'
         
      - name: 上传固件到 OneDrive
        env:
          refreshtoken: ${{secrets.REFRESH_TOKEN}}
        run: |
          VERSION1="${{ env.VERSION1 }}"
          VERSION2="${{ env.VERSION2 }}"
          VERSION3="${{ env.VERSION3 }}"
          VERSION4="${{ env.VERSION4 }}"
          VERSION5="${{ env.VERSION5 }}"
          rclone copy "$HOME/${VERSION1/ /_}.zip" e5:/NSEmuHelper/NSFirmware
          rclone copy "$HOME/${VERSION2/ /_}.zip" e5:/NSEmuHelper/NSFirmware
          rclone copy "$HOME/${VERSION3/ /_}.zip" e5:/NSEmuHelper/NSFirmware
          rclone copy "$HOME/${VERSION4/ /_}.zip" e5:/NSEmuHelper/NSFirmware
          rclone copy "$HOME/${VERSION5/ /_}.zip" e5:/NSEmuHelper/NSFirmware

