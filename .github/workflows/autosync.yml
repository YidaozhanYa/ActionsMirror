name: NS 模拟器自动镜像同步

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0/3 * * *'

jobs:
  YuzuEA:
    runs-on: ubuntu-latest
    steps:
      - name: 获取最新构建版本号和 URL
        run: |
             VERSION=$(curl https://api.github.com/repos/pineappleea/pineapple-src/releases | grep "tag_name\": \"EA" | head -1)
             VERSION=${VERSION// /};VERSION=${VERSION//\"/};VERSION=${VERSION//tag_name:EA-/};VERSION=${VERSION//,/}
             echo "版本号为：${VERSION}"
             URL="https://github.com/pineappleEA/pineapple-src/releases/download/EA-${VERSION}/Windows-Yuzu-EA-${VERSION}.7z"
             echo "链接为：${URL}"
             echo "VERSION=${VERSION}" >> $GITHUB_ENV
             echo "URL=${URL}" >> $GITHUB_ENV
      - name: 安装 Python
        uses: actions/setup-python@v2.3.1
      - name: 安装阿里云盘 cli
        run: pip install aliyunpan
      - name: 检查构建是否重复
        env:
          refreshtoken: ${{ secrets.REFRESH_TOKEN }}
        run: |
          BUILDS_LIST=$(aliyunpan-cli -t ${refreshtoken} ls NSEmuHelper/YuzuEAMirror)
          CHECK_REPEATED="No"
          if [[ "${BUILDS_LIST}" =~ ${{ env.VERSION }} ]]; then
          CHECK_REPEATED="Yes"
          fi
          echo "CHECK_REPEATED=${CHECK_REPEATED}" >> $GITHUB_ENV
      - name: 下载最新构建
        if: ${{ env.CHECK_REPEATED }} = "No"
        run: |
             cd /tmp
             echo "下载 ${{ env.URL }}"
             curl -fL "${{ env.URL }}" -o "/tmp/Windows-Yuzu-EA-${{ env.VERSION }}.7z"
      - name: 删除旧的构建
        continue-on-error: true
        if: ${{ env.CHECK_REPEATED }} = "No"
        env:
          refreshtoken: ${{ secrets.REFRESH_TOKEN }}
        run: |
          echo "尝试删除最新版本五个版本之前的构建"
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/YuzuEAMirror/Windows-Yuzu-EA-$((${{ env.VERSION }}-5)).7z
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/YuzuEAMirror/Windows-Yuzu-EA-$((${{ env.VERSION }}-6)).7z
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/YuzuEAMirror/Windows-Yuzu-EA-$((${{ env.VERSION }}-7)).7z
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/YuzuEAMirror/Windows-Yuzu-EA-$((${{ env.VERSION }}-8)).7z
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/YuzuEAMirror/Windows-Yuzu-EA-$((${{ env.VERSION }}-9)).7z
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/YuzuEAMirror/Windows-Yuzu-EA-$((${{ env.VERSION }}-10)).7z
      - name: 上传构建到阿里云盘
        if: ${{ env.CHECK_REPEATED }} = "No"
        env:
          refreshtoken: ${{secrets.REFRESH_TOKEN}}
        run: aliyunpan-cli -t ${refreshtoken} upload -f /tmp/Windows-Yuzu-EA-${{ env.VERSION }}.7z NSEmuHelper/YuzuEAMirror

  YuzuMainline:
    runs-on: ubuntu-latest
    steps:
      - name: 获取最新构建版本号和 URL
        run: |
             VERSION=$(curl https://api.github.com/repos/yuzu-emu/yuzu-mainline/releases/latest | grep "tag_name\": \"mainline" | head -1)
             VERSION=${VERSION// /};VERSION=${VERSION//\"/};VERSION=${VERSION//tag_name:mainline-0-/};VERSION=${VERSION//,/}
             echo "版本号为：${VERSION}"
             URL=$(curl https://api.github.com/repos/yuzu-emu/yuzu-mainline/releases/latest | grep "browser_download_url" | grep "yuzu-windows-msvc" | grep "7z")
             URL=${URL// /};URL=${URL//\"/};URL=${URL//browser_download_url:/};URL=${URL//,/}
             echo "链接为：${URL}"
             echo "VERSION=${VERSION}" >> $GITHUB_ENV
             echo "URL=${URL}" >> $GITHUB_ENV
      - name: 安装 Python
        uses: actions/setup-python@v2.3.1
      - name: 安装阿里云盘 cli
        run: pip install aliyunpan
      - name: 检查构建是否重复
        env:
          refreshtoken: ${{ secrets.REFRESH_TOKEN }}
        run: |
          BUILDS_LIST=$(aliyunpan-cli -t ${refreshtoken} ls NSEmuHelper/YuzuMainlineMirror)
          CHECK_REPEATED="No"
          if [[ "${BUILDS_LIST}" =~ ${{ env.VERSION }} ]]; then
          CHECK_REPEATED="Yes"
          fi
          echo "CHECK_REPEATED=${CHECK_REPEATED}" >> $GITHUB_ENV
      - name: 下载最新构建
        if: ${{ env.CHECK_REPEATED }} = "No"
        run: |
             cd /tmp
             echo "下载 ${{ env.URL }}"
             curl -fL "${{ env.URL }}" -o "/tmp/yuzu-windows-msvc-${{ env.VERSION }}.7z"
      - name: 删除旧的构建
        continue-on-error: true
        if: ${{ env.CHECK_REPEATED }} = "No"
        env:
          refreshtoken: ${{ secrets.REFRESH_TOKEN }}
        run: |
          echo "尝试删除最新版本五个版本之前的构建"
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/YuzuMainlineMirror/yuzu-windows-msvc-$((${{ env.VERSION }}-5)).7z
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/YuzuMainlineMirror/yuzu-windows-msvc-$((${{ env.VERSION }}-6)).7z
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/YuzuMainlineMirror/yuzu-windows-msvc-$((${{ env.VERSION }}-7)).7z
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/YuzuMainlineMirror/yuzu-windows-msvc-$((${{ env.VERSION }}-8)).7z
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/YuzuMainlineMirror/yuzu-windows-msvc-$((${{ env.VERSION }}-9)).7z
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/YuzuMainlineMirror/yuzu-windows-msvc-$((${{ env.VERSION }}-10)).7z
      - name: 上传构建到阿里云盘
        if: ${{ env.CHECK_REPEATED }} = "No"
        env:
          refreshtoken: ${{secrets.REFRESH_TOKEN}}
        run: aliyunpan-cli -t ${refreshtoken} upload -f /tmp/yuzu-windows-msvc-${{ env.VERSION }}.7z NSEmuHelper/YuzuMainlineMirror

  RyujinxMainline:
    runs-on: ubuntu-latest
    steps:
      - name: 获取最新构建版本号和 URL
        run: |
             VERSION=$(curl https://api.github.com/repos/Ryujinx/release-channel-master/releases/latest | grep "tag_name" | head -1)
             VERSION=${VERSION// /};VERSION=${VERSION//\"/};VERSION=${VERSION//tag_name:/};VERSION=${VERSION//,/}
             echo "版本号为：${VERSION}"
             URL="https://github.com/Ryujinx/release-channel-master/releases/download/${VERSION}/ryujinx-${VERSION}-win_x64.zip"
             echo "链接为：${URL}"
             echo "VERSION=${VERSION}" >> $GITHUB_ENV
             echo "URL=${URL}" >> $GITHUB_ENV
      - name: 安装 Python
        uses: actions/setup-python@v2.3.1
      - name: 安装阿里云盘 cli
        run: pip install aliyunpan
      - name: 检查构建是否重复
        env:
          refreshtoken: ${{ secrets.REFRESH_TOKEN }}
        run: |
          BUILDS_LIST=$(aliyunpan-cli -t ${refreshtoken} ls NSEmuHelper/RyujinxMainlineMirror)
          CHECK_REPEATED="No"
          if [[ "${BUILDS_LIST}" =~ ${{ env.VERSION }} ]]; then
          CHECK_REPEATED="Yes"
          fi
          echo "CHECK_REPEATED=${CHECK_REPEATED}" >> $GITHUB_ENV
      - name: 下载最新构建
        if: ${{ env.CHECK_REPEATED }} = "No"
        run: |
             cd /tmp
             echo "下载 ${{ env.URL }}"
             curl -fL "${{ env.URL }}" -o "/tmp/ryujinx-${{ env.VERSION }}-win_x64.zip"
      - name: 删除旧的构建
        continue-on-error: true
        if: ${{ env.CHECK_REPEATED }} = "No"
        env:
          refreshtoken: ${{ secrets.REFRESH_TOKEN }}
        run: |
          SMALLVERSION=$(echo ${VERSION//./\\n} | tail -1)
          echo "尝试删除最新版本五个版本之前的构建"
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/RyujinxMainlineMirror/ryujinx-$((SMALLVERSION-5))-win_x64.zip
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/RyujinxMainlineMirror/ryujinx-$((SMALLVERSION-6))-win_x64.zip
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/RyujinxMainlineMirror/ryujinx-$((SMALLVERSION-7))-win_x64.zip
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/RyujinxMainlineMirror/ryujinx-$((SMALLVERSION-8))-win_x64.zip
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/RyujinxMainlineMirror/ryujinx-$((SMALLVERSION-9))-win_x64.zip
          aliyunpan-cli -t ${refreshtoken} rm NSEmuHelper/RyujinxMainlineMirror/ryujinx-$((SMALLVERSION-10))-win_x64.zip
      - name: 上传构建到阿里云盘
        if: ${{ env.CHECK_REPEATED }} = "No"
        env:
          refreshtoken: ${{secrets.REFRESH_TOKEN}}
        run: aliyunpan-cli -t ${refreshtoken} upload -f /tmp/ryujinx-${{ env.VERSION }}-win_x64.zip NSEmuHelper/RyujinxMainlineMirror

